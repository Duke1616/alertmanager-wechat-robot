syntax = "proto3";
package robot.rule;
option go_package = "github.com/Duke1616/alertmanager-wechat-robot/apps/rule";

import "common/pb/github.com/infraboard/mcube/pb/page/page.proto";
import "apps/rule/pb/rule.proto";
import "apps/rule/pb/group.proto";
import public "google/protobuf/Empty.proto";

service RPC {
  // 同步告警规则
  rpc SyncRule(SyncRuleRequest) returns(SendResponse);

  // 删除Rule
  rpc DeleteRule(DeleteRuleRequest) returns(RuleSet);
  // 查询告警规则
  rpc QueryRule(QueryRuleRequest) returns(RuleSet);

  // 删除Rule
  rpc DeleteGroup(DeleteGroupRequest) returns(GroupSet);
  // 查询告警分组
  rpc QueryGroup(QueryGroupRequest) returns(GroupSet);
}

message SyncRuleRequest {
  // 根据配置信息进行同步
  // @gotags: json:"setting_id"
  string setting_id = 1;
}

message SendResponse {
  bool success = 1;
}

message QueryRuleRequest {
  // 分页参数
  // @gotags: json:"page"
  infraboard.mcube.page.PageRequest page = 1;
  // 组信息
  // @gotags: json:"group_ids"
  repeated string group_ids = 2;
  // 告警级别
  // @gotags: json:"level"
  string level = 3;
  // 告警服务
  // @gotags: json:"service_name"
  string service = 4;
}

message QueryGroupRequest {
  // 分页参数
  // @gotags: json:"page"
  infraboard.mcube.page.PageRequest page = 1;
  // 告警分组
  // @gotags: json:"domain"
  string domain = 2;
  // 告警分组
  // @gotags: json:"namespace"
  string namespace = 3;
}

message DeleteGroupRequest {
  // 组信息
  // @gotags: json:"domain" validate:"required,lte=60"
  string domain = 1;
  // 组信息
  // @gotags: json:"namespace" validate:"required,lte=60"
  string namespace = 2;
}

message DeleteRuleRequest {
  // 组信息
  // @gotags: json:"group_ids" validate:"required,lte=60"
  repeated string group_ids = 2;
}