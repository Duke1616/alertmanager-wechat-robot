syntax = "proto3";
package robot.rule;
option go_package = "github.com/Duke1616/alertmanager-wechat-robot/apps/rule";

import "common/pb/github.com/infraboard/mcube/pb/page/page.proto";
import "apps/rule/pb/rule.proto";
import public "google/protobuf/Empty.proto";

service RPC {
  // 同步告警规则
  rpc SyncRule(SyncRuleRequest) returns(google.protobuf.Empty);
  // 查询告警规则
  rpc QueryRule(QueryRuleRequest) returns(RuleSet);
  // 查询告警分组
  rpc QueryGroup(QueryGroupRequest) returns(GroupSet);
}

enum SYNC_MODE {
  ALL = 0;
  GROUP = 1;
  RULE = 2;
}

message SyncRuleRequest {
  // 同步模式
  // @gotags: json:"sync_mode"
  SYNC_MODE sync_mode = 1;
  // 根据组进行同步
  // @gotags: json:"group_name"
  string group_name = 2;
  // 根据组进行同步
  // @gotags: json:"rule_name"
  string rule_name = 3;
}

message QueryRuleRequest {
  // 分页参数
  // @gotags: json:"page"
  infraboard.mcube.page.PageRequest page = 1;
  // 告警名称
  // @gotags: json:"name"
  string name = 2;
  // 告警分组
  // @gotags: json:"group_name"
  string group_name = 3;
  // 告警级别
  // @gotags: json:"level"
  string level = 4;
  // 告警服务
  // @gotags: json:"service_name"
  string service_name = 5;
}

message QueryGroupRequest {
  // 分页参数
  // @gotags: json:"page"
  infraboard.mcube.page.PageRequest page = 1;
  // 告警名称
  // @gotags: json:"name"
  string name = 2;
}