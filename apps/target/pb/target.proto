syntax = "proto3";
package robot.target;
option go_package = "github.com/Duke1616/alertmanager-wechat-robot/apps/target";

import "common/pb/github.com/infraboard/mcube/pb/page/page.proto";

service RPC {
  // 创建消息通知群组信息
  rpc CreateTarget(Target) returns(Target);
  // 查看群组详细信息
  rpc DescribeTarget(DescribeTargetRequest) returns(Target);
//  查看群组信息
  rpc QueryTarget(QueryTargetRequest) returns(TargetSet);
}

message Target {
  // id信息
  // @gotags: bson:"_id" json:"id"
  string id = 1;
  // 群组名称
  // @gotags: bson:"name" json:"name" validate:"required,lte=64"
  string name = 2;
  // 创建时间
  // @gotags: bson:"create_at" json:"create_at"
  int64 create_at = 3;
  // wechat url
  // @gotags: bson:"url" json:"url" validate:"required,lte=64"
  string url = 4;
  // robot 密钥信息
  // @gotags: bson:"secret" json:"secret" validate:"required,lte=64"
  string secret = 5;
  // 描述信息
  // @gotags: bson:"description" json:"description"
  string description = 6;
}

message TargetSet {
  // 总数量
  // @gotags: bson:"total" json:"total"
  int64 total = 1;
  // 数据
  // @gotags: bson:"items" json:"items"
  repeated Target items = 2;
}


enum DESCRIBE_BY {
  ID = 0;
  NAME = 1;
}

message DescribeTargetRequest {
  // 查询方式
  // @gotags: json:"describe_by"
  DESCRIBE_BY describe_by = 1;
  // 通过Id查询
  // @gotags: json:"id"
  string id = 2;
  // 通过name查询
  // @gotags: json:"name"
  string name = 3;
}


message QueryTargetRequest {
  // 分页参数
  // @gotags: json:"page"
  infraboard.mcube.page.PageRequest page = 1;
  // url信息
  // @gotags: json:"url"
  string url = 2;
  // secret信息
  // @gotags: json:"secret"
  string secret = 3;
}